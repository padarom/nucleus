scalar Token

type Query {
  hosts: [Host]
  host(id: ID): Host

  servers: [Server]
  servers(host: ID): [Server]
  server(id: ID): Server

  packs: [Pack]
  pack(id: ID): Pack
}

# type Mutation {
#
# }

type Host {
  id: ID!
  hostname: String!
  port: Int!
  token: Token
  serverType: ControllableServerType
}

type Server {
  id: ID!
  host: Host!
  pack: Pack!
  flavor: Flavor
}

type Pack {
  id: ID!
  shortname: String!
  name: String!
  description: String
  author: String
  version: String
  flavors: [Flavor]
  ports: [PortMapping]
}

type Flavor {
  pack: Pack!
  shortname: String!
  name: String!
  description: String
}

type PortMapping {
  host: Int!
  client: Int!
  type: PortType!
  required: Boolean!
}

type User {
  id: ID!
  username: String!
  email: String
}

enum PortType {
  UDP
  TCP
}

enum ControllableServerType {
  AWS
  AZURE
  GOOGLE
}
